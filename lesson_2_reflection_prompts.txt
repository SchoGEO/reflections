What happens when you initialize a repository? Why do you need to do it?

	A new (private) .git folder is created, containing important meta data. Here,
	the status of the git-repository, future commits, changes and all other meta
	data will be saved.
	
How is the staging area different from the working directory and the repository?
What value do you think it offers?

	The staging area is a virtual area where files can be added that should go into
	one commit. Usually the files for one commit should be logically connected. The 
	working directory contains all files, no matter if they are going to be in the 
	next commit or not. The repository has the "knowledge" of all changes being made.

How can you use the staging area to make sure you have one commit per logical
change?

	Compare content of staging area to both, working directory and most recent commit
	in repository to see if changes in staging area only lead to one logical change.
	If not, files added to staging area can be reverted with command git reset --hard.
	Need to be very careful with this command.
	compare working directory with staging area:	git diff
	compare staging area with most recent commit:	git diff --staged

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

How do the diagrams help you visualize the branch structure?

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges
manually?
